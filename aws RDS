Deploying End to End Website on AWS | Integrating EC2, Route 53 and RDS
https://github.com/hshar94/aws-live
https://www.youtube.com/watch?v=oWf6hH4iRP4&ab_channel=Intellipaat

AWS s3 bucket
create s3 role and attach it to the ec2 instance

AWS RDS :-
sudo apt-get update
# For Sql-client
sudo apt-get install mysql-client -y

# For python and related frameworks
sudo apt-get install python3 -y
sudo apt-get install python3-flask -y		# helps python to host a website on the server
sudo apt-get install python3-pymysql -y		# s a library which helps to connect website to the mysql server 
sudo apt-get install python3-boto3 -y		# aws sdk's basically used to connect to s3 service were we upload our files

# for running application
sudo python3 Empapp.py
	
RDS - MySql Cmds
sudo -i
apt update 
mysql -h <rds_endpoint> -u <user_name> -p
give the passwrd

mysql> show databases; (shows existing and newly created databases)
mysql> create database <database_name>; (create new database)
eg:- mysql> create database employee;
mysql> show databases;
mysql> use <database_name> (switch or change or get inside the database)
eg:- mysql> use employee;
mysql> create table <table_name>; (create tables inside the database)
eg:- mysql> create table engineer (empid varchar(20), fname varchar(20), lname varchar(20), pri_skill varchar(20), location varchar(20));
mysql> show tables; (shows existing and newly created tables)
mysql> describe <table_name>;
eg:- mysql> describe engineer; (gives field , type etc), see below
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| empid     | varchar(20) | YES  |     | NULL    |       |
| fname     | varchar(20) | YES  |     | NULL    |       |
| lname     | varchar(20) | YES  |     | NULL    |       |
| pri_skill | varchar(20) | YES  |     | NULL    |       |
| location  | varchar(20) | YES  |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
mysql> select * from <table_name>; (shows table Information)
eg:- mysql> select * from engineer; (see below)
+-------+-------+-------+-----------+-----------+
| empid | fname | lname | pri_skill | location  |
+-------+-------+-------+-----------+-----------+
| 1     | ambi  | ns    | aws       | Mandya    |
| 2     | anil  | pu    | no skill  | bangalore |
+-------+-------+-------+-----------+-----------+
mysql> drop table <table_name>; (remove table from the database)
eg:- mysql> drop table engineer;
=====================================================================
use Jail;
Drop table prision;
drop database Jail;
CREATE DATABASE Jail;
use Jail;
CREATE TABLE prision(criminal_id varchar(20), first_name varchar(20), last_name varchar(20), case_name varchar(20), location varchar(20));
======================================================================
Dockerfile
======================================================================
FROM ubuntu
#FROM mysql
RUN apt-get update && apt-get upgrade -y
RUN apt-get install mysql-client -y
RUN apt-get install python3 -y
RUN apt-get install python3-flask -y
RUN apt-get install python3-pymysql -y
RUN apt-get install python3-boto3 -y
#RUN apt-get install awscli -y
#RUN aws s3 mb s3://ambi.fun 
#COPY s3_bucket.sh .
#RUN sh s3_bucket.sh
RUN mkdir -p RDS
WORKDIR /RDS
COPY . .
#ENV passwrd=iquadtech
ARG passwrd=*****
RUN  mysql -h namma-database.cychouziopiu.us-east-1.rds.amazonaws.com -u ambi -p$passwrd < jailer_details.sql
EXPOSE 80
ENTRYPOINT python3 EmpApp.py

override ARG
sudo docker build -t --build-arg passwrd=iquadtech nammaimage .
=======================================================================================
vprofile.war to ROOt.war
FROM ubuntu as anil
RUN apt update
RUN apt install mysql-client -y
RUN mkdir -p db_fold
RUN chmod 777 db_fold
WORKDIR /db_fold/
COPY db_backup.sql .
RUN mysql -h namm-database.cbgxzr5ttkj4.ap-south-1.rds.amazonaws.com -u admin -padmin1234 accounts < db_backup.sql
ARG TEST=/var/lib/
WORKDIR ${TEST}
COPY ROOT.war .

#FROM tomcat:jre8-temurin-focal
FROM tomcat:9.0.34
ARG TEST=/var/lib
COPY --from=anil ${TEST}/ROOT.war /usr/local/tomcat/webapps
EXPOSE 8080
CMD ["/usr/local/tomcat/bin/catalina.sh", "
================================================================================================
FROM tomcat:8-jre11
LABEL "Project"="namma project"
LABEL "Author"="Namma"

RUN rm -rf /usr/local/tomcat/webapps/*
COPY target/vprofile-v2.war /usr/local/tomcat/webapps/ROOT.war

EXPOSE 8080
CMD ["catalina.sh", "run"]
WORKDIR /usr/local/tomcat/
VOLUME /usr/local/tomcat/webapps
===================================================================================================
